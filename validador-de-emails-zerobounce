function wsforms_zerobounce_email_validation() {
    ?>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            console.log("📧 Integración con ZeroBounce API activada para validación de emails...");

            const API_KEY = "6b14da5b839f4bf7834c96330082c755"; // API Key de ZeroBounce
            let isValidEmail = false;

            async function validateEmail(emailField) {
                if (!emailField || emailField.hasAttribute("data-validated")) return;

                const form = emailField.closest("form");
                const submitButton = form.querySelector("button[type='submit'], input[type='submit']");
                
                emailField.placeholder = "Ej: usuario@ejemplo.com";

                let warningMessage = document.createElement("span");
                warningMessage.style.color = "#e74c3c";
                warningMessage.style.fontSize = "14px";
                warningMessage.style.marginTop = "5px";
                warningMessage.style.display = "none";
                warningMessage.innerHTML = "⚠️ Ingresá un email válido.";

                emailField.parentNode.appendChild(warningMessage);

                emailField.addEventListener("blur", async function () {
                    let emailValue = emailField.value.trim();

                    if (emailValue.length === 0) {
                        isValidEmail = false;
                        warningMessage.style.display = "none";
                        emailField.style.border = "2px solid #ccc";
                        submitButton.disabled = true; // Bloquear el botón mientras no hay validación
                        return;
                    }

                    try {
                        let response = await fetch(`https://api.zerobounce.net/v2/validate?api_key=${API_KEY}&email=${emailValue}`);
                        let data = await response.json();

                        console.log("📧 Respuesta de ZeroBounce API:", data);

                        // Validamos si el estado es "valid"
                        if (data.status === "valid") {
                            isValidEmail = true;
                            warningMessage.style.display = "none";
                            emailField.style.border = "2px solid green";
                            submitButton.disabled = false; // Habilitar el botón solo si el email es válido
                            console.log("✅ Email válido:", emailValue);
                        } else {
                            warningMessage.innerHTML = "⚠️ Email inválido o no entregable.";
                            warningMessage.style.display = "block";
                            emailField.style.border = "2px solid red";
                            isValidEmail = false;
                            submitButton.disabled = true; // Bloquear el botón si el email es inválido
                            console.warn("⛔ Email inválido:", emailValue);
                        }
                    } catch (error) {
                        console.error("⛔ Error en la validación con ZeroBounce API:", error);
                        warningMessage.innerHTML = "⚠️ Error al validar el email.";
                        warningMessage.style.display = "block";
                        emailField.style.border = "2px solid red";
                        isValidEmail = false;
                        submitButton.disabled = true;
                    }
                });

                // Bloquear el envío del formulario
                form.addEventListener("submit", async function (event) {
                    if (!isValidEmail) {
                        event.preventDefault();
                        warningMessage.style.display = "block";
                        emailField.style.border = "2px solid red";
                        console.warn("⛔ Envío bloqueado: email inválido.");
                        return false;
                    }
                }, true);

                emailField.setAttribute("data-validated", "true");
            }

            function waitForEmailFields() {
                let observer = new MutationObserver(() => {
                    let emailFields = document.querySelectorAll("input[type='email']");
                    emailFields.forEach(emailField => validateEmail(emailField));
                });

                observer.observe(document.body, { childList: true, subtree: true });
            }

            waitForEmailFields();
        });
    </script>
    <?php
}
add_action('wp_footer', 'wsforms_zerobounce_email_validation');
