function wsforms_custom_phone_validation() {
    ?>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            console.log("‚úÖ Script cargado correctamente, esperando carga de WS Forms...");

            function attachValidation(phoneField) {
                const form = phoneField.closest("form");
                let isValidNumber = false;

                // Expresi√≥n regular sin +595 (solo 9 d√≠gitos: operadora + 6 n√∫meros)
                const paraguayPhoneRegex = /^(961|962|963|964|965|966|971|972|973|974|975|976|981|982|983|984|985|986|991|992|993|994|995|996)\d{6}$/;

                // Agregar placeholder din√°mico
                phoneField.placeholder = "Ej: 961123456";

                // Crear contenedor para mensajes y verificaci√≥n
                let validationContainer = document.createElement("div");
                validationContainer.style.display = "flex";
                validationContainer.style.alignItems = "center";
                validationContainer.style.marginTop = "5px";

                let warningMessage = document.createElement("span");
                warningMessage.style.color = "#e67e22"; // Naranja m√°s amigable
                warningMessage.style.fontSize = "14px";
                warningMessage.style.display = "none";
                warningMessage.innerHTML = "‚ö†Ô∏è Ingres√° un n√∫mero v√°lido de Paraguay. Ej: <strong>961123456</strong>";

                let checkIcon = document.createElement("span");
                checkIcon.innerHTML = "‚úÖ";
                checkIcon.style.fontSize = "18px";
                checkIcon.style.marginLeft = "8px";
                checkIcon.style.display = "none";

                validationContainer.appendChild(warningMessage);
                validationContainer.appendChild(checkIcon);
                phoneField.parentNode.appendChild(validationContainer);

                // Bloquear caracteres no num√©ricos en tiempo real
                phoneField.addEventListener("input", function () {
                    phoneField.value = phoneField.value.replace(/[^\d]/g, ""); // Solo n√∫meros
                    phoneField.style.border = "2px solid #ccc"; // Restablecer borde
                    checkIcon.style.display = "none"; // Ocultar icono hasta verificar
                });

                // Validaci√≥n cuando el usuario deja de escribir (blur)
                phoneField.addEventListener("blur", function () {
                    let phoneNumber = phoneField.value.trim();

                    if (phoneNumber.length === 0) {
                        isValidNumber = false;
                        warningMessage.style.display = "none";
                        phoneField.style.border = "2px solid #ccc"; // Restablecer borde
                        checkIcon.style.display = "none";
                        return;
                    }

                    console.log(`üìû Validando n√∫mero localmente: ${phoneNumber}`);

                    if (paraguayPhoneRegex.test(phoneNumber)) {
                        console.log("‚úÖ N√∫mero v√°lido.");
                        isValidNumber = true;
                        warningMessage.style.display = "none"; // Ocultar advertencia
                        phoneField.style.border = "2px solid green"; // Borde verde si es v√°lido
                        checkIcon.style.display = "inline"; // Mostrar √≠cono de verificaci√≥n
                    } else {
                        console.warn("‚ùå N√∫mero inv√°lido.");
                        warningMessage.style.display = "block"; // Mostrar advertencia
                        phoneField.style.border = "2px solid red"; // Borde rojo si es inv√°lido
                        checkIcon.style.display = "none"; // Ocultar √≠cono
                        isValidNumber = false;
                    }
                });

                // Evitar env√≠o con n√∫mero inv√°lido sin generar error en WS Forms
                form.addEventListener("submit", function (event) {
                    console.log("üîç Verificando antes del env√≠o. N√∫mero v√°lido:", isValidNumber);

                    if (!isValidNumber) {
                        event.preventDefault(); // Bloquea el env√≠o
                        event.stopImmediatePropagation(); // Evita que WS Forms lo procese
                        warningMessage.style.display = "block"; // Asegurar que la advertencia siga visible
                        phoneField.style.border = "2px solid red"; // Asegurar borde rojo
                        console.warn("‚õî El env√≠o del formulario fue bloqueado porque el n√∫mero es inv√°lido.");
                        return false;
                    }

                    return true; // Permitir el env√≠o en caso de n√∫mero v√°lido
                }, true);
            }

            // Esperar a que WS Forms cargue el campo din√°micamente
            function waitForField() {
                let observer = new MutationObserver(() => {
                    let phoneField = document.querySelector("input[type='tel'], input[name*='phone'], input[name*='field'], input[id*='wsf']");
                    if (phoneField) {
                        console.log("üìû Campo de tel√©fono encontrado:", phoneField);
                        attachValidation(phoneField);
                        observer.disconnect(); // Detener la observaci√≥n una vez que el campo es encontrado
                    }
                });

                observer.observe(document.body, { childList: true, subtree: true });
            }

            waitForField();
        });
    </script>
    <?php
}
add_action('wp_footer', 'wsforms_custom_phone_validation');
